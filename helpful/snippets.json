{
  "Console Log": {
    "prefix": "cl",
    "body": ["console.log($1);"]
  },
  "Try Catch": {
    "prefix": "tc",
    "body": ["try {", " $1", "} catch (error) {", " $2", "};"]
  },
  "Try Catch Fecth": {
    "prefix": "tcf",
    "body": [
      "try {",
      " const response = await fetch(`http://localhost:4000/$1`);",
      " if (!response.ok) {",
      "  const errorData = await response.json();",
      "  console.log(`Error: ${2}`);",
      "  throw new Error('${3}' + errorData.message);",
      " }",
      " const responseData = await response.json();",
      " console.log('Response Data: ', responseData);",
      "} catch (error) {",
      " console.log(`Error: ${5}`);",
      "};"
    ]
  },
  "React useState": {
    "prefix": "us",
    "body": ["const [$1, set$2] = useState($3);"]
  },
  "React useEffect": {
    "prefix": "ue",
    "body": ["useEffect(() => {", "  $1", "}, [$2]);"]
  },
  "React useCallback": {
    "prefix": "ucb",
    "body": ["useCallback(() => {", "  $1", "}, [$2]);"]
  },
  "React useMemo": {
    "prefix": "umm",
    "body": ["useMemo(() => {", "  $1", "}, [$2]);"]
  },
  "Async React Function Component": {
    "prefix": "arjsfc",
    "body": [
      "const $1 = async () => {",
      "  return $2;",
      "};",
      "",
      "export default $1;"
    ]
  },
  "Async React Function Component with Props": {
    "prefix": "arjsfcp",
    "body": [
      "interface $1Props {}",
      "",
      "const $1 = async ({}: $1Props) => {",
      "  return $2;",
      "};",
      "",
      "export default $1;"
    ]
  },
  "React Function Component": {
    "prefix": "rjsfc",
    "body": [
      "const $1 = () => {",
      "  return $2;",
      "};",
      "",
      "export default $1;"
    ]
  },
  "React Function Component with Props": {
    "prefix": "rjsfcp",
    "body": [
      "interface $1Props {}",
      "",
      "const $1 = ({}: $1Props) => {",
      "  return $2;",
      "};",
      "",
      "export default $1;"
    ]
  }
}
